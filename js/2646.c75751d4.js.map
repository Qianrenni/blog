{"version":3,"file":"js/2646.c75751d4.js","mappings":"oHAAA,uuC","sources":["webpack://myblog/./src/assets/md/java/content/016-1 集合概述.md"],"sourcesContent":["export default \"## **1. 集合概述**\\r\\n\\r\\n### **1.1 集合框架的层次结构**\\r\\n\\r\\nJava 集合框架（Collection Framework）提供了一组接口和类，用于存储和操作对象的集合。它的主要接口包括 `Collection` 和 `Map`，其层次结构如下：\\r\\n\\r\\n#### **1.1.1 Collection 接口**\\r\\n\\r\\n- **定义**：\\r\\n  - 是集合的根接口，表示一组对象（称为元素）。\\r\\n- **子接口**：\\r\\n  - `List`：有序集合，允许重复元素。\\r\\n  - `Set`：无序集合，不允许重复元素。\\r\\n  - `Queue`：队列，用于按特定顺序处理元素。\\r\\n- **实现类**：\\r\\n  - `ArrayList`, `LinkedList`（实现 `List`）\\r\\n  - `HashSet`, `TreeSet`, `LinkedHashSet`（实现 `Set`）\\r\\n\\r\\n#### **1.1.2 Map 接口**\\r\\n\\r\\n- **定义**：\\r\\n  - 表示键值对的集合，每个键最多对应一个值。\\r\\n- **实现类**：\\r\\n  - `HashMap`：基于哈希表实现，无序。\\r\\n  - `TreeMap`：基于红黑树实现，按键排序。\\r\\n  - `LinkedHashMap`：基于哈希表和链表实现，保持插入顺序。\\r\\n\\r\\n---\\r\\n\\r\\n### **1.2 Collection 接口与 Map 接口的区别**\\r\\n\\r\\n| 特性                   | Collection                          | Map                              |\\r\\n|------------------------|-------------------------------------|----------------------------------|\\r\\n| **数据结构**            | 存储单个元素                       | 存储键值对                      |\\r\\n| **是否允许重复**        | 允许（`List`）或不允许（`Set`）     | 键不允许重复，值可以重复        |\\r\\n| **遍历方式**            | 使用迭代器或增强型 for 循环         | 遍历键、值或键值对              |\\r\\n| **典型实现**            | `ArrayList`, `HashSet`             | `HashMap`, `TreeMap`            |\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}