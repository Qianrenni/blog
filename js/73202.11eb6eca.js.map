{"version":3,"file":"js/73202.11eb6eca.js","mappings":"qHAAA,61C","sources":["webpack://myblog/./src/assets/md/java/content/012-1 异常体系.md"],"sourcesContent":["export default \"## **1. 异常体系**\\r\\n\\r\\n### **1.1 异常分类**\\r\\n\\r\\nJava 中的异常分为两大类：`Checked Exception` 和 `Unchecked Exception`。\\r\\n\\r\\n#### **1.1.1 Checked Exception（受检异常）**\\r\\n\\r\\n- **定义**：\\r\\n  - 必须在编译时显式处理的异常。\\r\\n  - 如果方法可能抛出受检异常，则必须通过 `try-catch` 或 `throws` 声明进行处理。\\r\\n- **特点**：\\r\\n  - 继承自 `Exception` 类，但不包括 `RuntimeException` 及其子类。\\r\\n  - 通常表示可恢复的错误或外部资源问题（如文件读取失败、网络连接中断等）。\\r\\n- **常见类型**：\\r\\n  - `IOException`\\r\\n  - `SQLException`\\r\\n  - `FileNotFoundException`\\r\\n\\r\\n#### **1.1.2 Unchecked Exception（非受检异常）**\\r\\n\\r\\n- **定义**：\\r\\n  - 不需要在编译时显式处理的异常。\\r\\n  - 包括运行时异常（`RuntimeException`）和错误（`Error`）。\\r\\n- **特点**：\\r\\n  - 运行时异常通常由程序逻辑错误引起，难以预测。\\r\\n  - 错误（`Error`）是严重的系统级问题，一般无法恢复。\\r\\n- **常见类型**：\\r\\n  - **运行时异常**：\\r\\n    - `NullPointerException`：尝试访问空对象的方法或属性。\\r\\n    - `ArrayIndexOutOfBoundsException`：数组索引越界。\\r\\n    - `ArithmeticException`：除以零等算术错误。\\r\\n  - **错误**：\\r\\n    - `OutOfMemoryError`：内存不足。\\r\\n    - `StackOverflowError`：栈溢出。\\r\\n\\r\\n#### **1.1.3 异常层次结构**\\r\\n\\r\\n```plaintext\\r\\nThrowable\\r\\n├── Error (严重错误，不可恢复)\\r\\n│   ├── OutOfMemoryError\\r\\n│   ├── StackOverflowError\\r\\n├── Exception (可恢复的异常)\\r\\n│   ├── RuntimeException (非受检异常)\\r\\n│   │   ├── NullPointerException\\r\\n│   │   ├── ArrayIndexOutOfBoundsException\\r\\n│   │   ├── ArithmeticException\\r\\n│   ├── IOException (受检异常)\\r\\n│   │   ├── FileNotFoundException\\r\\n│   │   ├── SocketException\\r\\n```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}