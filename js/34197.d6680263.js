"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[34197],{34197:function(n,r,t){t.r(r),r["default"]='## **1. 函数基础**\r\n\r\n### **1.1 函数定义与调用**\r\n\r\n函数是执行特定任务的一段代码，它接受输入（称为参数）并返回输出（称为返回值）。函数的定义包括返回类型、函数名、参数列表和函数体。\r\n\r\n- **函数定义**：\r\n\r\n  ```cpp\r\n  返回类型 函数名(参数列表) {\r\n      // 函数体\r\n      return 返回值;\r\n  }\r\n  ```\r\n\r\n  - **返回类型**：函数返回的数据类型，可以是 `void`（表示无返回值）。\r\n  - **函数名**：函数的标识符，遵循变量命名规则。\r\n  - **参数列表**：函数接受的输入参数，可以为空。\r\n  - **函数体**：包含函数的具体实现逻辑。\r\n\r\n  示例：\r\n\r\n  ```cpp\r\n  int add(int a, int b) {\r\n      return a + b;\r\n  }\r\n  ```\r\n\r\n- **函数调用**：\r\n  调用函数时，需要提供实际参数（实参），并根据需要接收返回值。\r\n\r\n  ```cpp\r\n  int result = add(3, 5); // 调用 add 函数，传入 3 和 5\r\n  cout << "Result: " << result << endl; // 输出结果\r\n  ```\r\n\r\n### **1.2 参数传递**\r\n\r\nC++ 支持三种主要的参数传递方式：值传递、指针传递和引用传递。\r\n\r\n- **值传递**：\r\n  值传递会复制实参的值到形参中，函数内部对形参的修改不会影响实参。\r\n\r\n  ```cpp\r\n  void increment(int x) {\r\n      x++;\r\n  }\r\n\r\n  int main() {\r\n      int a = 5;\r\n      increment(a);\r\n      cout << "a: " << a << endl; // 输出仍然是 5\r\n  }\r\n  ```\r\n\r\n- **指针传递**：\r\n  指针传递通过传递变量的地址，允许函数直接修改实参的值。\r\n\r\n  ```cpp\r\n  void increment(int* x) {\r\n      (*x)++;\r\n  }\r\n\r\n  int main() {\r\n      int a = 5;\r\n      increment(&a);\r\n      cout << "a: " << a << endl; // 输出为 6\r\n  }\r\n  ```\r\n\r\n- **引用传递**：\r\n  引用传递通过传递变量的别名，允许函数直接修改实参的值。\r\n\r\n  ```cpp\r\n  void increment(int& x) {\r\n      x++;\r\n  }\r\n\r\n  int main() {\r\n      int a = 5;\r\n      increment(a);\r\n      cout << "a: " << a << endl; // 输出为 6\r\n  }\r\n  ```\r\n\r\n### **1.3 返回值与返回类型**\r\n\r\n函数可以通过 `return` 语句返回一个值，返回类型必须与声明一致。如果函数不需要返回值，则使用 `void`。\r\n\r\n- **有返回值的函数**：\r\n\r\n  ```cpp\r\n  double divide(int a, int b) {\r\n      if (b == 0) {\r\n          throw runtime_error("Division by zero");\r\n      }\r\n      return static_cast<double>(a) / b;\r\n  }\r\n  ```\r\n\r\n- **无返回值的函数**：\r\n\r\n  ```cpp\r\n  void printMessage(const string& message) {\r\n      cout << message << endl;\r\n  }\r\n  ```\r\n\r\n---'}}]);
//# sourceMappingURL=34197.d6680263.js.map