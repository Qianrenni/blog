"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[2132],{72132:function(e,r,n){n.r(r),r["default"]='## **6.8 中介者模式**\r\n\r\n### **定义与特点**\r\n\r\n中介者模式通过一个中介对象来封装一系列对象的交互，减少对象之间的直接依赖。\r\n\r\n### **减少对象间的直接交互**\r\n\r\n- 中介者协调多个对象的行为。\r\n\r\n### **示例：聊天室**\r\n\r\n```python\r\nclass ChatRoom:\r\n    def show_message(self, user, message):\r\n        print(f"[{user.name}]: {message}")\r\n\r\nclass User:\r\n    def __init__(self, name, chat_room):\r\n        self.name = name\r\n        self.chat_room = chat_room\r\n\r\n    def send_message(self, message):\r\n        self.chat_room.show_message(self, message)\r\n\r\n# 使用示例\r\nchat_room = ChatRoom()\r\nuser1 = User("Alice", chat_room)\r\nuser2 = User("Bob", chat_room)\r\n\r\nuser1.send_message("Hi Bob!")  # 输出: [Alice]: Hi Bob!\r\nuser2.send_message("Hello Alice!")  # 输出: [Bob]: Hello Alice!\r\n```\r\n\r\n---'}}]);
//# sourceMappingURL=2132.c5d7a445.js.map