"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[76946],{76946:function(n,r,$){$.r(r),r["default"]="## **§1.4 分块矩阵**\r\n\r\n在处理阶数较高的矩阵时，直接进行整体运算往往较为繁琐。为了简化计算过程，我们可以使用一种有效的方法：**将矩阵按一定方式分成若干小块**，从而构成一个**由子矩阵组成的矩阵结构**，这种形式称为**分块矩阵**。\r\n\r\n---\r\n\r\n### **一、分块矩阵的概念**\r\n\r\n将一个大矩阵用若干条横线和纵线分割成多个小矩阵（称为**子块**），每个子块都作为一个独立的矩阵来看待，整个矩阵就可以看作是由这些子块组成的“大矩阵”。\r\n\r\n例如，设矩阵 $ A $ 为：\r\n\r\n$$\r\nA =\r\n\\begin{bmatrix}\r\na_{11} & a_{12} & a_{13} & a_{14} \\\\\r\na_{21} & a_{22} & a_{23} & a_{24} \\\\\r\na_{31} & a_{32} & a_{33} & a_{34} \\\\\r\na_{41} & a_{42} & a_{43} & a_{44}\r\n\\end{bmatrix}\r\n$$\r\n\r\n可以将其分块为：\r\n\r\n$$\r\nA =\r\n\\begin{bmatrix}\r\nA_{11} & A_{12} \\\\\r\nA_{21} & A_{22}\r\n\\end{bmatrix}\r\n$$\r\n\r\n其中：\r\n\r\n- $ A_{11} = \\begin{bmatrix} a_{11} & a_{12} \\\\ a_{21} & a_{22} \\end{bmatrix} $\r\n- $ A_{12} = \\begin{bmatrix} a_{13} & a_{14} \\\\ a_{23} & a_{24} \\end{bmatrix} $\r\n- $ A_{21} = \\begin{bmatrix} a_{31} & a_{32} \\\\ a_{41} & a_{42} \\end{bmatrix} $\r\n- $ A_{22} = \\begin{bmatrix} a_{33} & a_{34} \\\\ a_{43} & a_{44} \\end{bmatrix} $\r\n\r\n这样，$ A $ 就被表示为一个以子矩阵为元素的 $ 2 \\times 2 $ 分块矩阵。\r\n\r\n---\r\n\r\n### **二、常见的分块方式**\r\n\r\n#### **1. 按行分块**\r\n\r\n将 $ m \\times n $ 矩阵 $ A $ 按行分为 $ m $ 个 $ 1 \\times n $ 子块：\r\n\r\n$$\r\nA =\r\n\\begin{bmatrix}\r\n\\alpha_1 \\\\\r\n\\alpha_2 \\\\\r\n\\vdots \\\\\r\n\\alpha_m\r\n\\end{bmatrix},\\quad \\text{其中 } \\alpha_i = (a_{i1}, a_{i2}, \\dots, a_{in})\r\n$$\r\n\r\n#### **2. 按列分块**\r\n\r\n将 $ m \\times n $ 矩阵 $ A $ 按列分为 $ n $ 个 $ m \\times 1 $ 子块：\r\n\r\n$$\r\nA = (\\beta_1,\\ \\beta_2,\\ \\dots,\\ \\beta_n),\\quad \\text{其中 } \\beta_j =\r\n\\begin{bmatrix}\r\na_{1j} \\\\\r\na_{2j} \\\\\r\n\\vdots \\\\\r\na_{mj}\r\n\\end{bmatrix}\r\n$$\r\n\r\n#### **3. 块对角矩阵（准对角矩阵）**\r\n\r\n当矩阵中非零元集中在主对角线附近时，可将其分块为如下形式：\r\n\r\n$$\r\nA =\r\n\\begin{bmatrix}\r\nA_1 & O & \\cdots & O \\\\\r\nO & A_2 & \\cdots & O \\\\\r\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\r\nO & O & \\cdots & A_t\r\n\\end{bmatrix}\r\n= \\text{diag}(A_1, A_2, \\dots, A_t)\r\n$$\r\n\r\n其中每个 $ A_i $ 是 $ r_i \\times r_i $ 阶方阵，且 $ r_1 + r_2 + \\cdots + r_t = n $。\r\n\r\n---\r\n\r\n### **三、分块矩阵的运算**\r\n\r\n#### **1. 分块矩阵的加法**\r\n\r\n若两个分块矩阵 $ A = (A_{ij}) $ 和 $ B = (B_{ij}) $ 的分块方式相同，即对应的子块具有相同的行列数，则它们可以相加，定义为：\r\n\r\n$$\r\nA + B = (A_{ij} + B_{ij})\r\n$$\r\n\r\n#### **2. 分块矩阵的数乘**\r\n\r\n设 $ k $ 是一个常数，$ A = (A_{ij}) $ 是一个分块矩阵，则：\r\n\r\n$$\r\nkA = (kA_{ij})\r\n$$\r\n\r\n#### **3. 分块矩阵的乘法**\r\n\r\n设 $ A $ 是 $ m \\times p $ 分块矩阵，$ B $ 是 $ p \\times n $ 分块矩阵，且它们的分块方式满足：\r\n\r\n- $ A $ 的列分法与 $ B $ 的行分法一致。\r\n\r\n则它们的乘积 $ AB $ 可按分块方式进行：\r\n\r\n$$\r\nAB = C = (C_{ij}),\\quad \\text{其中 } C_{ij} = \\sum_{k=1}^{s} A_{ik} B_{kj}\r\n$$\r\n\r\n> ✅ 这样做的好处是：即使原矩阵阶数很大，也可以通过小块之间的运算来简化计算。\r\n\r\n---\r\n\r\n### **四、典型应用示例**\r\n\r\n##### **例1** 设\r\n\r\n$$\r\nA =\r\n\\begin{bmatrix}\r\n1 & 2 & 0 & 0 \\\\\r\n3 & 4 & 0 & 0 \\\\\r\n0 & 0 & -1 & 2 \\\\\r\n0 & 0 & 3 & -2\r\n\\end{bmatrix},\\quad\r\nB =\r\n\\begin{bmatrix}\r\n5 & 6 & 0 & 0 \\\\\r\n7 & 8 & 0 & 0 \\\\\r\n0 & 0 & 1 & 0 \\\\\r\n0 & 0 & 0 & 1\r\n\\end{bmatrix}\r\n$$\r\n\r\n求 $ AB $。\r\n\r\n**解：**\r\n\r\n将 $ A $、$ B $ 分块为：\r\n\r\n$$\r\nA =\r\n\\begin{bmatrix}\r\nA_{11} & O \\\\\r\nO & A_{22}\r\n\\end{bmatrix},\\quad\r\nB =\r\n\\begin{bmatrix}\r\nB_{11} & O \\\\\r\nO & B_{22}\r\n\\end{bmatrix}\r\n$$\r\n\r\n其中：\r\n\r\n- $ A_{11} = \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\end{bmatrix},\\quad B_{11} = \\begin{bmatrix} 5 & 6 \\\\ 7 & 8 \\end{bmatrix} $\r\n- $ A_{22} = \\begin{bmatrix} -1 & 2 \\\\ 3 & -2 \\end{bmatrix},\\quad B_{22} = \\begin{bmatrix} 1 & 0 \\\\ 0 & 1 \\end{bmatrix} $\r\n\r\n于是："}}]);
//# sourceMappingURL=76946.4c17d898.js.map