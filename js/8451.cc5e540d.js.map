{"version":3,"file":"js/8451.cc5e540d.js","mappings":"oHAAA,6sK","sources":["webpack://myblog/./src/assets/md/javascript/content/005-条件语句.md"],"sourcesContent":["export default \"## **条件语句**\\r\\n\\r\\n### **1. `if...else` 语句**\\r\\n\\r\\n`if...else` 是最基本的条件语句，用于在满足某些条件时执行特定代码块。如果条件不满足，则可以执行其他代码块。\\r\\n\\r\\n#### **基本语法**\\r\\n\\r\\n```javascript\\r\\nif (条件) {\\r\\n    // 当条件为 true 时执行的代码\\r\\n} else {\\r\\n    // 当条件为 false 时执行的代码\\r\\n}\\r\\n```\\r\\n\\r\\n#### **示例**\\r\\n\\r\\n```javascript\\r\\nconst age = 20;\\r\\n\\r\\nif (age >= 18) {\\r\\n    console.log(\\\"You are an adult.\\\");\\r\\n} else {\\r\\n    console.log(\\\"You are a minor.\\\");\\r\\n}\\r\\n```\\r\\n\\r\\n- 如果 `age` 大于等于 18，输出 \\\"You are an adult.\\\"。\\r\\n- 否则，输出 \\\"You are a minor.\\\"。\\r\\n\\r\\n#### **多分支条件（`else if`）**\\r\\n\\r\\n当需要处理多个条件时，可以使用 `else if` 来添加额外的判断分支。\\r\\n\\r\\n**语法**：\\r\\n\\r\\n```javascript\\r\\nif (条件1) {\\r\\n    // 条件1为 true 时执行的代码\\r\\n} else if (条件2) {\\r\\n    // 条件2为 true 时执行的代码\\r\\n} else {\\r\\n    // 所有条件都不满足时执行的代码\\r\\n}\\r\\n```\\r\\n\\r\\n**示例**：\\r\\n\\r\\n```javascript\\r\\nconst score = 85;\\r\\n\\r\\nif (score >= 90) {\\r\\n    console.log(\\\"Grade: A\\\");\\r\\n} else if (score >= 80) {\\r\\n    console.log(\\\"Grade: B\\\");\\r\\n} else if (score >= 70) {\\r\\n    console.log(\\\"Grade: C\\\");\\r\\n} else {\\r\\n    console.log(\\\"Grade: D\\\");\\r\\n}\\r\\n```\\r\\n\\r\\n- 根据 `score` 的值，输出对应的等级。\\r\\n\\r\\n#### **嵌套 `if...else`**\\r\\n\\r\\n可以在一个 `if...else` 语句中嵌套另一个 `if...else`，以实现更复杂的逻辑。\\r\\n\\r\\n**示例**：\\r\\n\\r\\n```javascript\\r\\nconst temperature = 30;\\r\\nconst weather = \\\"sunny\\\";\\r\\n\\r\\nif (weather === \\\"sunny\\\") {\\r\\n    if (temperature > 25) {\\r\\n        console.log(\\\"It's a hot sunny day.\\\");\\r\\n    } else {\\r\\n        console.log(\\\"It's a pleasant sunny day.\\\");\\r\\n    }\\r\\n} else {\\r\\n    console.log(\\\"The weather is not sunny.\\\");\\r\\n}\\r\\n```\\r\\n\\r\\n- 如果天气是晴天且温度高于 25°C，输出 \\\"It's a hot sunny day.\\\"。\\r\\n- 如果天气是晴天但温度低于或等于 25°C，输出 \\\"It's a pleasant sunny day.\\\"。\\r\\n- 如果天气不是晴天，输出 \\\"The weather is not sunny.\\\"。\\r\\n\\r\\n#### **注意事项**\\r\\n\\r\\n1. **条件表达式的结果必须是布尔值**：\\r\\n   - 如果条件不是布尔值，JavaScript 会尝试将其转换为布尔值。\\r\\n\\r\\n     ```javascript\\r\\n     const value = \\\"Hello\\\";\\r\\n     if (value) {\\r\\n         console.log(\\\"Value is truthy.\\\");\\r\\n     } else {\\r\\n         console.log(\\\"Value is falsy.\\\");\\r\\n     }\\r\\n     // 输出 \\\"Value is truthy.\\\"\\r\\n     ```\\r\\n\\r\\n2. **避免重复判断**：\\r\\n   - 在复杂逻辑中，尽量通过合理的设计减少重复判断。\\r\\n\\r\\n---\\r\\n\\r\\n### **2. `switch...case` 语句**\\r\\n\\r\\n`switch...case` 是一种多分支条件语句，适用于需要根据某个变量的不同值执行不同代码块的场景。相比 `if...else`，它更简洁、直观，尤其适合处理离散值。\\r\\n\\r\\n#### **基本语法**\\r\\n\\r\\n```javascript\\r\\nswitch (表达式) {\\r\\n    case 值1:\\r\\n        // 当表达式的值等于值1时执行的代码\\r\\n        break;\\r\\n    case 值2:\\r\\n        // 当表达式的值等于值2时执行的代码\\r\\n        break;\\r\\n    default:\\r\\n        // 当表达式的值不匹配任何 case 时执行的代码\\r\\n}\\r\\n```\\r\\n\\r\\n#### **示例**\\r\\n\\r\\n```javascript\\r\\nconst fruit = \\\"apple\\\";\\r\\n\\r\\nswitch (fruit) {\\r\\n    case \\\"apple\\\":\\r\\n        console.log(\\\"This is an apple.\\\");\\r\\n        break;\\r\\n    case \\\"banana\\\":\\r\\n        console.log(\\\"This is a banana.\\\");\\r\\n        break;\\r\\n    case \\\"orange\\\":\\r\\n        console.log(\\\"This is an orange.\\\");\\r\\n        break;\\r\\n    default:\\r\\n        console.log(\\\"Unknown fruit.\\\");\\r\\n}\\r\\n```\\r\\n\\r\\n- 如果 `fruit` 的值是 `\\\"apple\\\"`，输出 \\\"This is an apple.\\\"。\\r\\n- 如果 `fruit` 的值是 `\\\"banana\\\"`，输出 \\\"This is a banana.\\\"。\\r\\n- 如果 `fruit` 的值是 `\\\"orange\\\"`，输出 \\\"This is an orange.\\\"。\\r\\n- 如果 `fruit` 的值不匹配任何 `case`，输出 \\\"Unknown fruit.\\\"。\\r\\n\\r\\n#### **关键点**\\r\\n\\r\\n1. **`break` 的作用**：\\r\\n   - 每个 `case` 后通常需要使用 `break`，否则代码会继续执行下一个 `case`，直到遇到 `break` 或 `switch` 结束。\\r\\n\\r\\n     ```javascript\\r\\n     const number = 2;\\r\\n\\r\\n     switch (number) {\\r\\n         case 1:\\r\\n             console.log(\\\"Number is 1\\\");\\r\\n         case 2:\\r\\n             console.log(\\\"Number is 2\\\");\\r\\n         case 3:\\r\\n             console.log(\\\"Number is 3\\\");\\r\\n         default:\\r\\n             console.log(\\\"Default case\\\");\\r\\n     }\\r\\n     // 输出：\\r\\n     // Number is 2\\r\\n     // Number is 3\\r\\n     // Default case\\r\\n     ```\\r\\n\\r\\n   - 如果加上 `break`：\\r\\n\\r\\n     ```javascript\\r\\n     switch (number) {\\r\\n         case 1:\\r\\n             console.log(\\\"Number is 1\\\");\\r\\n             break;\\r\\n         case 2:\\r\\n             console.log(\\\"Number is 2\\\");\\r\\n             break;\\r\\n         case 3:\\r\\n             console.log(\\\"Number is 3\\\");\\r\\n             break;\\r\\n         default:\\r\\n             console.log(\\\"Default case\\\");\\r\\n     }\\r\\n     // 输出：Number is 2\\r\\n     ```\\r\\n\\r\\n2. **`default` 分支**：\\r\\n   - `default` 是可选的，用于处理未匹配任何 `case` 的情况。\\r\\n   - 如果没有 `default` 且所有 `case` 都不匹配，则不会执行任何代码。\\r\\n\\r\\n3. **表达式与 `case` 值的比较**：\\r\\n   - `switch` 使用严格相等（`===`）进行比较。\\r\\n\\r\\n     ```javascript\\r\\n     const value = \\\"10\\\";\\r\\n\\r\\n     switch (value) {\\r\\n         case 10:\\r\\n             console.log(\\\"Number 10\\\");\\r\\n             break;\\r\\n         case \\\"10\\\":\\r\\n             console.log(\\\"String '10'\\\");\\r\\n             break;\\r\\n         default:\\r\\n             console.log(\\\"Unknown value\\\");\\r\\n     }\\r\\n     // 输出：String '10'\\r\\n     ```\\r\\n\\r\\n4. **合并多个 `case`**：\\r\\n   - 如果多个 `case` 需要执行相同的代码，可以将它们合并。\\r\\n\\r\\n     ```javascript\\r\\n     const day = \\\"Monday\\\";\\r\\n\\r\\n     switch (day) {\\r\\n         case \\\"Monday\\\":\\r\\n         case \\\"Tuesday\\\":\\r\\n         case \\\"Wednesday\\\":\\r\\n         case \\\"Thursday\\\":\\r\\n         case \\\"Friday\\\":\\r\\n             console.log(\\\"Weekday\\\");\\r\\n             break;\\r\\n         case \\\"Saturday\\\":\\r\\n         case \\\"Sunday\\\":\\r\\n             console.log(\\\"Weekend\\\");\\r\\n             break;\\r\\n         default:\\r\\n             console.log(\\\"Invalid day\\\");\\r\\n     }\\r\\n     // 输出：Weekday\\r\\n     ```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}