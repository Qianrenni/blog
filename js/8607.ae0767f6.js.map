{"version":3,"file":"js/8607.ae0767f6.js","mappings":"oHAAA,8uC","sources":["webpack://myblog/./src/assets/md/java/content/009-6 内部类.md"],"sourcesContent":["export default \"## **6. 内部类**\\r\\n\\r\\n### **6.1 静态内部类**\\r\\n\\r\\n- 静态内部类属于外部类本身，不依赖外部类实例。\\r\\n\\r\\n    ```java\\r\\n    public class OuterClass {\\r\\n        static class StaticInnerClass {\\r\\n            public void display() {\\r\\n                System.out.println(\\\"Static Inner Class\\\");\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    ```\\r\\n\\r\\n### **6.2 成员内部类**\\r\\n\\r\\n- 成员内部类属于外部类的实例，必须通过外部类实例访问。\\r\\n\\r\\n    ```java\\r\\n    public class OuterClass {\\r\\n        class MemberInnerClass {\\r\\n            public void display() {\\r\\n                System.out.println(\\\"Member Inner Class\\\");\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    ```\\r\\n\\r\\n### **6.3 局部内部类**\\r\\n\\r\\n- 局部内部类定义在方法或代码块中，仅在该范围内有效。\\r\\n\\r\\n    ```java\\r\\n    public class OuterClass {\\r\\n        public void method() {\\r\\n            class LocalInnerClass {\\r\\n                public void display() {\\r\\n                    System.out.println(\\\"Local Inner Class\\\");\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n    ```\\r\\n\\r\\n### **6.4 匿名内部类**\\r\\n\\r\\n- 匿名内部类是没有名字的类，通常用于简化代码。\\r\\n\\r\\n    ```java\\r\\n    Runnable r = new Runnable() {\\r\\n        @Override\\r\\n        public void run() {\\r\\n            System.out.println(\\\"Anonymous Inner Class\\\");\\r\\n        }\\r\\n    };\\r\\n    ```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}