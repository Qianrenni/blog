"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[7521],{87521:function(n,r,a){a.r(r),r["default"]='## **2. 联合体**\r\n\r\n联合体（`union`）是一种特殊的数据类型，其所有成员共享同一块内存空间。\r\n\r\n### **2.1 联合体的定义与使用**\r\n\r\n#### **1. 定义**\r\n\r\n- 使用 `union` 关键字定义联合体。\r\n- **语法**：\r\n\r\n  ```c\r\n  union union_name {\r\n      type1 member1;\r\n      type2 member2;\r\n      ...\r\n  };\r\n  ```\r\n\r\n- 示例：\r\n\r\n  ```c\r\n  union Data {\r\n      int i;\r\n      float f;\r\n      char str[20];\r\n  };\r\n  ```\r\n\r\n#### **2. 使用**\r\n\r\n- 同一时间只能存储一个成员的值，写入一个成员会覆盖其他成员。\r\n- 示例：\r\n\r\n  ```c\r\n  union Data data;\r\n  data.i = 10;\r\n  printf("data.i: %d\\n", data.i);\r\n\r\n  data.f = 220.5;\r\n  printf("data.f: %.2f\\n", data.f);\r\n\r\n  strcpy(data.str, "Hello");\r\n  printf("data.str: %s\\n", data.str);\r\n  ```\r\n\r\n---\r\n\r\n### **2.2 联合体与结构体的区别**\r\n\r\n| 特性               | 结构体 (`struct`)                       | 联合体 (`union`)                     |\r\n|--------------------|-----------------------------------------|---------------------------------------|\r\n| 内存分配           | 每个成员占用独立的内存空间              | 所有成员共享同一块内存空间            |\r\n| 数据存储           | 可以同时存储所有成员的值                | 同一时间只能存储一个成员的值          |\r\n| 大小               | 大小等于所有成员大小之和（可能对齐）    | 大小等于最大成员的大小                |\r\n| 应用场景           | 表示复杂的多字段数据                    | 节省内存或处理多种数据类型的情况       |\r\n\r\n---'}}]);
//# sourceMappingURL=7521.ccd2b70f.js.map