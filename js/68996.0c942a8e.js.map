{"version":3,"file":"js/68996.0c942a8e.js","mappings":"qHAAA,+yC","sources":["webpack://myblog/./src/assets/md/java/content/017-2 List.md"],"sourcesContent":["export default \"## **2. List**\\r\\n\\r\\n### **2.1 ArrayList 与 LinkedList 的区别与使用场景**\\r\\n\\r\\n#### **2.1.1 ArrayList**\\r\\n\\r\\n- **特点**：\\r\\n  - 基于动态数组实现。\\r\\n  - 查询快（通过索引访问），增删慢（需要移动元素）。\\r\\n- **适用场景**：\\r\\n  - 需要频繁随机访问元素时。\\r\\n- **示例**：\\r\\n\\r\\n  ```java\\r\\n  List<String> list = new ArrayList<>();\\r\\n  list.add(\\\"A\\\");\\r\\n  list.add(\\\"B\\\");\\r\\n  System.out.println(list.get(0)); // 输出：A\\r\\n  ```\\r\\n\\r\\n#### **2.1.2 LinkedList**\\r\\n\\r\\n- **特点**：\\r\\n  - 基于双向链表实现。\\r\\n  - 插入和删除快（只需调整指针），查询慢（需要从头或尾遍历）。\\r\\n- **适用场景**：\\r\\n  - 需要频繁插入或删除元素时。\\r\\n- **示例**：\\r\\n\\r\\n  ```java\\r\\n  List<String> list = new LinkedList<>();\\r\\n  list.add(\\\"A\\\");\\r\\n  list.add(\\\"B\\\");\\r\\n  list.remove(0); // 删除第一个元素\\r\\n  ```\\r\\n\\r\\n---\\r\\n\\r\\n### **2.2 遍历方式**\\r\\n\\r\\n#### **2.2.1 for 循环**\\r\\n\\r\\n```java\\r\\nList<String> list = Arrays.asList(\\\"A\\\", \\\"B\\\", \\\"C\\\");\\r\\nfor (int i = 0; i < list.size(); i++) {\\r\\n    System.out.println(list.get(i));\\r\\n}\\r\\n```\\r\\n\\r\\n#### **2.2.2 foreach 循环**\\r\\n\\r\\n```java\\r\\nList<String> list = Arrays.asList(\\\"A\\\", \\\"B\\\", \\\"C\\\");\\r\\nfor (String item : list) {\\r\\n    System.out.println(item);\\r\\n}\\r\\n```\\r\\n\\r\\n#### **2.2.3 Iterator**\\r\\n\\r\\n```java\\r\\nList<String> list = Arrays.asList(\\\"A\\\", \\\"B\\\", \\\"C\\\");\\r\\nIterator<String> iterator = list.iterator();\\r\\nwhile (iterator.hasNext()) {\\r\\n    System.out.println(iterator.next());\\r\\n}\\r\\n```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}