"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[7830],{77830:function(n,r,e){e.r(r),r["default"]='## **1. 类与对象**\r\n\r\n### **1.1 类的定义与成员变量/函数**\r\n\r\n- **类的定义**：\r\n  类是一种用户定义的数据类型，用于封装数据和行为。类由成员变量（属性）和成员函数（方法）组成。\r\n\r\n  ```cpp\r\n  class 类名 {\r\n      访问控制: // public, private, protected\r\n          成员变量;\r\n          成员函数;\r\n  };\r\n  ```\r\n\r\n- **示例**：\r\n\r\n  ```cpp\r\n  class Rectangle {\r\n  private:\r\n      int width, height; // 私有成员变量\r\n  public:\r\n      void setDimensions(int w, int h) { // 公有成员函数\r\n          width = w;\r\n          height = h;\r\n      }\r\n      int getArea() const { // 常量成员函数\r\n          return width * height;\r\n      }\r\n  };\r\n  ```\r\n\r\n### **1.2 对象的创建与使用**\r\n\r\n对象是类的实例，可以通过类名创建对象，并调用其成员函数或访问成员变量。\r\n\r\n- **创建对象**：\r\n\r\n  ```cpp\r\n  Rectangle rect; // 创建一个 Rectangle 对象\r\n  ```\r\n\r\n- **使用对象**：\r\n\r\n  ```cpp\r\n  rect.setDimensions(5, 10); // 调用公有成员函数\r\n  cout << "Area: " << rect.getArea() << endl; // 输出面积\r\n  ```\r\n\r\n### **1.3 访问控制**\r\n\r\nC++ 提供了三种访问控制修饰符，用于限制类成员的访问权限：\r\n\r\n- **`public`**：任何地方都可以访问。\r\n- **`private`**：只能在类内部访问。\r\n- **`protected`**：子类可以访问，外部不可访问。\r\n\r\n---'}}]);
//# sourceMappingURL=7830.5044a8e8.js.map