"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[9798],{59798:function(n,r,e){e.r(r),r["default"]='## **2. 条件编译**\r\n\r\n条件编译允许根据预定义的条件选择性地编译某些代码块，常用于跨平台开发或调试。\r\n\r\n### **2.1 常用指令**\r\n\r\n| 指令       | 描述                                                                 |\r\n|------------|----------------------------------------------------------------------|\r\n| `#ifdef`   | 如果某个宏已定义，则编译后续代码块。                                 |\r\n| `#ifndef`  | 如果某个宏未定义，则编译后续代码块。                                 |\r\n| `#else`    | 与 `#ifdef` 或 `#ifndef` 配合使用，表示“否则”分支。                   |\r\n| `#endif`   | 结束条件编译块。                                                     |\r\n\r\n- 示例：\r\n\r\n  ```c\r\n  #include <stdio.h>\r\n\r\n  #define DEBUG\r\n\r\n  int main() {\r\n      int x = 10;\r\n\r\n  #ifdef DEBUG\r\n      printf("Debug mode: x = %d\\n", x);\r\n  #else\r\n      printf("Release mode.\\n");\r\n  #endif\r\n\r\n      return 0;\r\n  }\r\n  ```\r\n\r\n- 输出：\r\n  - 如果定义了 `DEBUG`，输出：`Debug mode: x = 10`。\r\n  - 如果注释掉 `#define DEBUG`，输出：`Release mode.`。\r\n\r\n---\r\n\r\n### **2.2 应用场景：跨平台代码编写**\r\n\r\n- 不同平台可能需要不同的代码实现，条件编译可以帮助实现跨平台兼容。\r\n- 示例：\r\n\r\n  ```c\r\n  #include <stdio.h>\r\n\r\n  #ifdef _WIN32\r\n      #define OS "Windows"\r\n  #elif __linux__\r\n      #define OS "Linux"\r\n  #else\r\n      #define OS "Unknown"\r\n  #endif\r\n\r\n  int main() {\r\n      printf("Operating System: %s\\n", OS);\r\n      return 0;\r\n  }\r\n  ```\r\n\r\n- 输出：\r\n  - 在 Windows 上运行：`Operating System: Windows`。\r\n  - 在 Linux 上运行：`Operating System: Linux`。\r\n\r\n---'}}]);
//# sourceMappingURL=9798.208fe2e6.js.map