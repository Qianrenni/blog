"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[43517],{43517:function(n,e,r){r.r(e),e["default"]="## **上下文管理器**\r\n\r\n- 使用 `with` 语句。\r\n\r\n    ```python\r\n    # 不使用 with 语句\r\n    file = open('example.txt', 'r')\r\n    try:\r\n        content = file.read()\r\n        print(content)\r\n    finally:\r\n        file.close()\r\n\r\n    # 使用 with 语句\r\n    with open('example.txt', 'r') as file:\r\n        content = file.read()\r\n        print(content)\r\n    ```\r\n\r\n- 自定义上下文管理器：\r\n  - 实现 `__enter__` 和 `__exit__` 方法。\r\n  \r\n  ```python\r\n    class TemporaryFile:\r\n        def __init__(self, filename):\r\n            self.filename = filename\r\n\r\n        def __enter__(self):\r\n            # 进入上下文时打开文件\r\n            self.file = open(self.filename, 'w')\r\n            return self.file\r\n\r\n        def __exit__(self, exc_type, exc_value, traceback):\r\n            #exc_type是异常类型，exc_value是异常值，traceback是异常的堆栈跟踪\r\n            # 退出上下文时关闭文件\r\n            self.file.close()\r\n            print(\"File closed.\")\r\n\r\n    # 使用自定义上下文管理器\r\n    with TemporaryFile('temp.txt') as f:\r\n        f.write(\"Hello, World!\")\r\n   ```\r\n\r\n  - 使用 `contextlib` 模块。\r\n  \r\n    contextlib.contextmanager 是一个装饰器，允许你通过生成器函数快速创建上下文管理器。\r\n\r\n    ```python\r\n    from contextlib import contextmanager\r\n    @contextmanager\r\n    def temporary_file(filename):\r\n        try:\r\n            file = open(filename, 'w')\r\n            yield file  # 将文件对象传递给 with 语句\r\n        finally:\r\n            file.close()\r\n            print(\"File closed.\")\r\n\r\n    # 使用上下文管理器\r\n    with temporary_file('temp.txt') as f:\r\n        f.write(\"Hello, World!\")\r\n    ```\r\n\r\n---"}}]);
//# sourceMappingURL=43517.eb57ed3b.js.map