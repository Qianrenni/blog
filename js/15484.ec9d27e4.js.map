{"version":3,"file":"js/15484.ec9d27e4.js","mappings":"qHAAA,kyB","sources":["webpack://myblog/./src/assets/md/java/content/047-6 处理注解.md"],"sourcesContent":["export default \"## **6. 处理注解**\\r\\n\\r\\n反射可以用于读取类、方法或字段上的注解信息。\\r\\n\\r\\n### **6.1 定义注解**\\r\\n\\r\\n```java\\r\\nimport java.lang.annotation.*;\\r\\n\\r\\n@Retention(RetentionPolicy.RUNTIME)\\r\\n@Target(ElementType.METHOD)\\r\\npublic @interface MyAnnotation {\\r\\n    String value();\\r\\n}\\r\\n```\\r\\n\\r\\n### **6.2 使用注解**\\r\\n\\r\\n```java\\r\\npublic class Person {\\r\\n    @MyAnnotation(\\\"Hello\\\")\\r\\n    public void sayHello() {\\r\\n        System.out.println(\\\"Hello!\\\");\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n### **6.3 获取注解信息**\\r\\n\\r\\n```java\\r\\nClass<?> clazz = Person.class;\\r\\nMethod method = clazz.getMethod(\\\"sayHello\\\");\\r\\nif (method.isAnnotationPresent(MyAnnotation.class)) {\\r\\n    MyAnnotation annotation = method.getAnnotation(MyAnnotation.class);\\r\\n    System.out.println(annotation.value()); // 输出：Hello\\r\\n}\\r\\n```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}