"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[71102],{71102:function(n,r,C){C.r(r),r["default"]="## **1. 线程的基本概念**\r\n\r\n### **1.1 什么是线程？**\r\n\r\n- **定义**：\r\n  - 线程是操作系统能够独立调度和执行的最小单位。\r\n  - 线程共享进程的资源（如内存、文件描述符等），但每个线程有自己的栈和寄存器状态。\r\n- **特点**：\r\n  - 轻量级：与进程相比，线程的创建和切换开销更小。\r\n  - 共享资源：同一进程中的线程共享全局变量和堆内存。\r\n  - 并发性：多个线程可以同时运行，提高程序的效率。\r\n\r\n---\r\n\r\n### **1.2 进程与线程的区别**\r\n\r\n| 特性           | 进程                                   | 线程                                 |\r\n|----------------|----------------------------------------|--------------------------------------|\r\n| 资源分配       | 拥有独立的地址空间和资源               | 共享所属进程的资源                   |\r\n| 开销           | 创建和切换开销较大                     | 创建和切换开销较小                   |\r\n| 通信           | 需要通过 IPC（如管道、消息队列）通信   | 可以直接访问共享内存                 |\r\n| 崩溃影响       | 单个进程崩溃不会影响其他进程           | 单个线程崩溃可能导致整个进程崩溃     |\r\n\r\n---\r\n\r\n### **1.3 并发与并行**\r\n\r\n- **并发**：\r\n  - 多个任务在同一时间段内交替执行（可能只有一个 CPU 核心）。\r\n  - 示例：单核 CPU 上运行多个线程。\r\n- **并行**：\r\n  - 多个任务同时执行（需要多核 CPU）。\r\n  - 示例：多核 CPU 上运行多个线程。\r\n\r\n---"}}]);
//# sourceMappingURL=71102.fcd074bf.js.map