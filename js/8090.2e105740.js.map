{"version":3,"file":"js/8090.2e105740.js","mappings":"oHAAA,k0B","sources":["webpack://myblog/./src/assets/md/software/content/041-610 解释器模式.md"],"sourcesContent":["export default \"## **6.10 解释器模式**\\r\\n\\r\\n### **定义与特点**\\r\\n\\r\\n解释器模式定义了语言的文法表示，并定义一个解释器来处理这些文法。\\r\\n\\r\\n### **解析语言或表达式**\\r\\n\\r\\n- 解释器解析表达式并计算结果。\\r\\n\\r\\n### **示例：简单的数学表达式解析**\\r\\n\\r\\n```python\\r\\nclass Expression:\\r\\n    def interpret(self, context):\\r\\n        pass\\r\\n\\r\\nclass Number(Expression):\\r\\n    def __init__(self, value):\\r\\n        self.value = value\\r\\n\\r\\n    def interpret(self, context):\\r\\n        return self.value\\r\\n\\r\\nclass Add(Expression):\\r\\n    def __init__(self, left, right):\\r\\n        self.left = left\\r\\n        self.right = right\\r\\n\\r\\n    def interpret(self, context):\\r\\n        return self.left.interpret(context) + self.right.interpret(context)\\r\\n\\r\\n# 使用示例\\r\\ncontext = {}\\r\\nexpression = Add(Number(5), Number(3))\\r\\nresult = expression.interpret(context)\\r\\nprint(result)  # 输出: 8\\r\\n```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}