{"version":3,"file":"js/91428.e3771a0b.js","mappings":"qHAAA,2oB","sources":["webpack://myblog/./src/assets/md/c/content/018-2 指针的运算.md"],"sourcesContent":["export default \"## **2. 指针的运算**\\r\\n\\r\\n### **2.1 指针的加减运算**\\r\\n\\r\\n- 指针可以进行加减运算，但结果取决于指针的类型。\\r\\n- **规则**：\\r\\n  - 指针加减一个整数时，指针会移动 `n * sizeof(type)` 字节。\\r\\n  - 示例：\\r\\n\\r\\n    ```c\\r\\n    int arr[5] = {1, 2, 3, 4, 5};\\r\\n    int *p = arr;  // 指向数组的第一个元素\\r\\n    printf(\\\"%d\\\\n\\\", *(p + 2));  // 输出：3（移动两个整型大小的位置）\\r\\n    ```\\r\\n\\r\\n### **2.2 指针的比较运算**\\r\\n\\r\\n- 指针可以使用关系运算符（`==`, `!=`, `<`, `>`, `<=`, `>=`）进行比较。\\r\\n- 比较通常用于判断指针是否指向同一块内存区域或顺序。\\r\\n- 示例：\\r\\n\\r\\n  ```c\\r\\n  int arr[5] = {1, 2, 3, 4, 5};\\r\\n  int *p1 = &arr[0];\\r\\n  int *p2 = &arr[2];\\r\\n  if (p1 < p2) {\\r\\n      printf(\\\"p1 points to an earlier element than p2.\\\\n\\\");\\r\\n  }\\r\\n  ```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}