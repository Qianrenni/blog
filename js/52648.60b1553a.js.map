{"version":3,"file":"js/52648.60b1553a.js","mappings":"qHAAA,2O","sources":["webpack://myblog/./src/assets/md/software/content/049-设计模式的局限性.md"],"sourcesContent":["export default \"## **设计模式的局限性**\\r\\n\\r\\n虽然设计模式提供了强大的工具箱，但它们也有一定的局限性：\\r\\n\\r\\n- **过度工程**：有时候开发者可能会倾向于过度使用设计模式，导致代码变得复杂且难以维护。\\r\\n- **不适合所有场景**：并非所有的设计问题都能通过现有的设计模式解决。有时特定的问题需要创新性的解决方案。\\r\\n- **性能开销**：某些设计模式可能带来额外的性能开销，例如装饰器模式会增加对象的数量，从而影响性能。\";"],"names":[],"sourceRoot":""}