{"version":3,"file":"js/8362.c64bd81d.js","mappings":"mHAAA,isC","sources":["webpack://myblog/./src/assets/md/software/content/040-69 备忘录模式.md"],"sourcesContent":["export default \"## **6.9 备忘录模式**\\r\\n\\r\\n### **定义与特点**\\r\\n\\r\\n备忘录模式捕获并外部化对象的内部状态，以便以后恢复到该状态。\\r\\n\\r\\n### **捕获对象状态以便恢复**\\r\\n\\r\\n- 备忘录存储对象的状态。\\r\\n- 发起人创建和恢复状态。\\r\\n\\r\\n### **示例：撤销操作**\\r\\n\\r\\n```python\\r\\nclass Memento:\\r\\n    def __init__(self, state):\\r\\n        self.state = state\\r\\n\\r\\nclass Originator:\\r\\n    def __init__(self):\\r\\n        self.state = None\\r\\n\\r\\n    def set_state(self, state):\\r\\n        self.state = state\\r\\n\\r\\n    def save_to_memento(self):\\r\\n        return Memento(self.state)\\r\\n\\r\\n    def restore_from_memento(self, memento):\\r\\n        self.state = memento.state\\r\\n\\r\\nclass Caretaker:\\r\\n    def __init__(self):\\r\\n        self.mementos = []\\r\\n\\r\\n    def add_memento(self, memento):\\r\\n        self.mementos.append(memento)\\r\\n\\r\\n    def get_memento(self, index):\\r\\n        return self.mementos[index]\\r\\n\\r\\n# 使用示例\\r\\noriginator = Originator()\\r\\ncaretaker = Caretaker()\\r\\n\\r\\noriginator.set_state(\\\"State1\\\")\\r\\ncaretaker.add_memento(originator.save_to_memento())\\r\\n\\r\\noriginator.set_state(\\\"State2\\\")\\r\\ncaretaker.add_memento(originator.save_to_memento())\\r\\n\\r\\noriginator.restore_from_memento(caretaker.get_memento(0))\\r\\nprint(originator.state)  # 输出: State1\\r\\n```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}