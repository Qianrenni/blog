{"version":3,"file":"js/4751.6389894c.js","mappings":"oHAAA,kd","sources":["webpack://myblog/./src/assets/md/docker/content/001-1 Docker 简介与核心概念.md"],"sourcesContent":["export default \"# 1. Docker 简介与核心概念\\r\\n\\r\\n## 📌 什么是 Docker？\\r\\n\\r\\nDocker 是一个开源的应用容器引擎，让开发者可以将应用及其依赖打包在一个标准化的环境中运行 —— **一次构建，到处运行**。\\r\\n\\r\\n## 🧩 核心概念\\r\\n\\r\\n| 名称 | 含义 |\\r\\n|------|------|\\r\\n| **Image（镜像）** | 应用的静态模板，包含运行所需的所有文件和配置。 |\\r\\n| **Container（容器）** | 镜像的运行实例，是动态的、可启动的。 |\\r\\n| **Volume（卷）** | 用于持久化数据，避免容器删除后数据丢失。 |\\r\\n| **Network（网络）** | 容器之间通信的虚拟网络。 |\\r\\n| **Dockerfile** | 构建镜像的脚本文件。 |\\r\\n| **docker-compose.yml** | 多个服务（如 Web + DB）的编排配置文件。 |\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}