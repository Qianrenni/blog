{"version":3,"file":"js/6190.5b93759d.js","mappings":"oHAAA,inE","sources":["webpack://myblog/./src/assets/md/c/content/005-1 条件语句.md"],"sourcesContent":["export default \"## **1. 条件语句**\\r\\n\\r\\n条件语句用于根据特定条件的真假（`true` 或 `false`）来决定程序的执行路径。C 语言提供了多种条件语句形式。\\r\\n\\r\\n### **1.1 `if` 语句**\\r\\n\\r\\n- **作用**：当条件为真时执行一段代码。\\r\\n- **语法**：\\r\\n\\r\\n  ```c\\r\\n  if (condition) {\\r\\n      // 条件为真时执行的代码\\r\\n  }\\r\\n  ```\\r\\n\\r\\n- **示例**：\\r\\n\\r\\n  ```c\\r\\n  int x = 10;\\r\\n  if (x > 5) {\\r\\n      printf(\\\"x is greater than 5.\\\\n\\\");\\r\\n  }\\r\\n  ```\\r\\n\\r\\n### **1.2 `if-else` 语句**\\r\\n\\r\\n- **作用**：当条件为真时执行一段代码，否则执行另一段代码。\\r\\n- **语法**：\\r\\n\\r\\n  ```c\\r\\n  if (condition) {\\r\\n      // 条件为真时执行的代码\\r\\n  } else {\\r\\n      // 条件为假时执行的代码\\r\\n  }\\r\\n  ```\\r\\n\\r\\n- **示例**：\\r\\n\\r\\n  ```c\\r\\n  int x = 3;\\r\\n  if (x > 5) {\\r\\n      printf(\\\"x is greater than 5.\\\\n\\\");\\r\\n  } else {\\r\\n      printf(\\\"x is less than or equal to 5.\\\\n\\\");\\r\\n  }\\r\\n  ```\\r\\n\\r\\n### **1.3 `if-else if-else` 语句**\\r\\n\\r\\n- **作用**：处理多个条件分支。\\r\\n- **语法**：\\r\\n\\r\\n  ```c\\r\\n  if (condition1) {\\r\\n      // 条件1为真时执行的代码\\r\\n  } else if (condition2) {\\r\\n      // 条件2为真时执行的代码\\r\\n  } else {\\r\\n      // 所有条件都为假时执行的代码\\r\\n  }\\r\\n  ```\\r\\n\\r\\n- **示例**：\\r\\n\\r\\n  ```c\\r\\n  int score = 85;\\r\\n  if (score >= 90) {\\r\\n      printf(\\\"Grade: A\\\\n\\\");\\r\\n  } else if (score >= 80) {\\r\\n      printf(\\\"Grade: B\\\\n\\\");\\r\\n  } else if (score >= 70) {\\r\\n      printf(\\\"Grade: C\\\\n\\\");\\r\\n  } else {\\r\\n      printf(\\\"Grade: D\\\\n\\\");\\r\\n  }\\r\\n  ```\\r\\n\\r\\n### **1.4 `switch-case` 语句**\\r\\n\\r\\n- **作用**：根据变量的值选择执行不同的代码块。\\r\\n- **语法**：\\r\\n\\r\\n  ```c\\r\\n  switch (expression) {\\r\\n      case value1:\\r\\n          // 当 expression == value1 时执行的代码\\r\\n          break;\\r\\n      case value2:\\r\\n          // 当 expression == value2 时执行的代码\\r\\n          break;\\r\\n      default:\\r\\n          // 当 expression 不匹配任何 case 时执行的代码\\r\\n  }\\r\\n  ```\\r\\n\\r\\n- **注意**：\\r\\n  - `break` 语句用于跳出 `switch`，避免“贯穿”到下一个 `case`。\\r\\n  - 如果没有匹配的 `case`，则执行 `default` 分支（可选）。\\r\\n- **示例**：\\r\\n\\r\\n  ```c\\r\\n  int day = 3;\\r\\n  switch (day) {\\r\\n      case 1:\\r\\n          printf(\\\"Monday\\\\n\\\");\\r\\n          break;\\r\\n      case 2:\\r\\n          printf(\\\"Tuesday\\\\n\\\");\\r\\n          break;\\r\\n      case 3:\\r\\n          printf(\\\"Wednesday\\\\n\\\");\\r\\n          break;\\r\\n      default:\\r\\n          printf(\\\"Invalid day\\\\n\\\");\\r\\n  }\\r\\n  ```\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}