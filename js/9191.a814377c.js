"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[9191],{69191:function(r,n,e){e.r(n),n["default"]="## **2. 封装**\r\n\r\n### **2.1 访问修饰符**\r\n\r\nJava 提供了四种访问修饰符，用于控制类、成员变量和方法的访问权限：\r\n\r\n- `private`：仅在当前类内可访问。\r\n- `protected`：在同一包内或子类中可访问。\r\n- `public`：任何地方都可访问。\r\n- **默认**（无修饰符）：同一包内可访问。\r\n\r\n示例：\r\n\r\n```java\r\npublic class Person {\r\n    private String name; // 私有变量\r\n\r\n    public String getName() { // Getter 方法\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) { // Setter 方法\r\n        this.name = name;\r\n    }\r\n}\r\n```\r\n\r\n### **2.2 Getter 和 Setter 方法**\r\n\r\n- **Getter 方法**：用于获取私有成员变量的值。\r\n- **Setter 方法**：用于设置私有成员变量的值。\r\n- 封装的好处：\r\n  - 保护数据，避免直接修改。\r\n  - 提供统一的访问接口。\r\n\r\n---"}}]);
//# sourceMappingURL=9191.a814377c.js.map