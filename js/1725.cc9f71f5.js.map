{"version":3,"file":"js/1725.cc9f71f5.js","mappings":"mHAAA,8lF","sources":["webpack://myblog/./src/assets/md/java/content/024-1 文件操作.md"],"sourcesContent":["export default \"## **1. 文件操作**\\r\\n\\r\\n### **1.1 文件的创建、删除、读取与写入**\\r\\n\\r\\nJava 中通过 `File` 类可以对文件和目录进行操作。以下是一些常见的文件操作：\\r\\n\\r\\n#### **1.1.1 创建文件**\\r\\n\\r\\n```java\\r\\nimport java.io.File;\\r\\nimport java.io.IOException;\\r\\n\\r\\npublic class FileExample {\\r\\n    public static void main(String[] args) throws IOException {\\r\\n        File file = new File(\\\"example.txt\\\");\\r\\n        if (file.createNewFile()) {\\r\\n            System.out.println(\\\"File created: \\\" + file.getName());\\r\\n        } else {\\r\\n            System.out.println(\\\"File already exists.\\\");\\r\\n        }\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### **1.1.2 删除文件**\\r\\n\\r\\n```java\\r\\nFile file = new File(\\\"example.txt\\\");\\r\\nif (file.delete()) {\\r\\n    System.out.println(\\\"File deleted: \\\" + file.getName());\\r\\n} else {\\r\\n    System.out.println(\\\"Failed to delete the file.\\\");\\r\\n}\\r\\n```\\r\\n\\r\\n#### **1.1.3 读取文件**\\r\\n\\r\\n使用 `FileInputStream` 或 `BufferedReader` 读取文件内容：\\r\\n\\r\\n```java\\r\\nimport java.io.BufferedReader;\\r\\nimport java.io.FileReader;\\r\\nimport java.io.IOException;\\r\\n\\r\\npublic class FileReadExample {\\r\\n    public static void main(String[] args) throws IOException {\\r\\n        BufferedReader reader = new BufferedReader(new FileReader(\\\"example.txt\\\"));\\r\\n        String line;\\r\\n        while ((line = reader.readLine()) != null) {\\r\\n            System.out.println(line);\\r\\n        }\\r\\n        reader.close();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n#### **1.1.4 写入文件**\\r\\n\\r\\n使用 `FileOutputStream` 或 `BufferedWriter` 写入文件内容：\\r\\n\\r\\n```java\\r\\nimport java.io.BufferedWriter;\\r\\nimport java.io.FileWriter;\\r\\nimport java.io.IOException;\\r\\n\\r\\npublic class FileWriteExample {\\r\\n    public static void main(String[] args) throws IOException {\\r\\n        BufferedWriter writer = new BufferedWriter(new FileWriter(\\\"example.txt\\\"));\\r\\n        writer.write(\\\"Hello, World!\\\");\\r\\n        writer.close();\\r\\n    }\\r\\n}\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\n### **1.2 File 类的常用方法**\\r\\n\\r\\n| 方法名                      | 描述                                   |\\r\\n|-----------------------------|---------------------------------------|\\r\\n| `createNewFile()`           | 创建新文件                           |\\r\\n| `delete()`                  | 删除文件或目录                       |\\r\\n| `exists()`                  | 检查文件或目录是否存在               |\\r\\n| `isFile()`                  | 判断是否为文件                       |\\r\\n| `isDirectory()`             | 判断是否为目录                       |\\r\\n| `getName()`                 | 获取文件或目录的名称                 |\\r\\n| `getPath()`                 | 获取文件或目录的路径                 |\\r\\n| `length()`                  | 获取文件的大小（以字节为单位）       |\\r\\n| `listFiles()`               | 获取目录中的文件和子目录列表         |\\r\\n\\r\\n---\";"],"names":[],"sourceRoot":""}