"use strict";(self["webpackChunkmyblog"]=self["webpackChunkmyblog"]||[]).push([[20296],{20296:function(n,r,e){e.r(r),r["default"]='## **2. 异常处理机制**\r\n\r\n### **2.1 try-catch-finally**\r\n\r\n- **作用**：\r\n  - 捕获并处理异常，防止程序崩溃。\r\n- **语法**：\r\n\r\n  ```java\r\n  try {\r\n      // 可能抛出异常的代码\r\n  } catch (ExceptionType e) {\r\n      // 处理异常\r\n  } finally {\r\n      // 无论是否发生异常都会执行的代码\r\n  }\r\n  ```\r\n\r\n- **特点**：\r\n  - `try` 块用于包裹可能抛出异常的代码。\r\n  - `catch` 块用于捕获并处理特定类型的异常。\r\n  - `finally` 块用于释放资源（如关闭文件流、数据库连接等），即使发生异常也会执行。\r\n\r\n#### **示例**\r\n\r\n```java\r\npublic class ExceptionHandlingExample {\r\n    public static void main(String[] args) {\r\n        try {\r\n            int result = 10 / 0; // 抛出 ArithmeticException\r\n        } catch (ArithmeticException e) {\r\n            System.out.println("Caught exception: " + e.getMessage());\r\n        } finally {\r\n            System.out.println("Finally block executed.");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n输出：\r\n\r\n```\r\nCaught exception: / by zero\r\nFinally block executed.\r\n```\r\n\r\n---\r\n\r\n### **2.2 throw 和 throws**\r\n\r\n#### **2.2.1 throw**\r\n\r\n- **作用**：\r\n  - 用于手动抛出异常。\r\n- **语法**：\r\n\r\n  ```java\r\n  throw new ExceptionType("Message");\r\n  ```\r\n\r\n- **示例**：\r\n\r\n  ```java\r\n  public void validateAge(int age) {\r\n      if (age < 18) {\r\n          throw new IllegalArgumentException("Age must be at least 18.");\r\n      }\r\n  }\r\n  ```\r\n\r\n#### **2.2.2 throws**\r\n\r\n- **作用**：\r\n  - 声明方法可能抛出的异常，将异常处理的责任交给调用者。\r\n- **语法**：\r\n\r\n  ```java\r\n  public void readFile() throws IOException {\r\n      FileReader file = new FileReader("test.txt");\r\n      // 文件操作\r\n  }\r\n  ```\r\n\r\n- **示例**：\r\n\r\n  ```java\r\n  public void processFile() throws IOException {\r\n      readFile();\r\n  }\r\n\r\n  public void readFile() throws IOException {\r\n      FileReader file = new FileReader("test.txt");\r\n      // 文件操作\r\n  }\r\n  ```\r\n\r\n---\r\n\r\n### **2.3 自定义异常**\r\n\r\n- **定义**：\r\n  - 创建自己的异常类，继承自 `Exception` 或 `RuntimeException`。\r\n- **语法**：\r\n\r\n  ```java\r\n  public class CustomException extends Exception {\r\n      public CustomException(String message) {\r\n          super(message);\r\n      }\r\n  }\r\n  ```\r\n\r\n- **示例**：\r\n\r\n  ```java\r\n  public class CustomExceptionExample {\r\n      public static void main(String[] args) {\r\n          try {\r\n              validateAge(15);\r\n          } catch (CustomException e) {\r\n              System.out.println(e.getMessage());\r\n          }\r\n      }\r\n\r\n      public static void validateAge(int age) throws CustomException {\r\n          if (age < 18) {\r\n              throw new CustomException("Age must be at least 18.");\r\n          }\r\n      }\r\n  }\r\n  ```\r\n\r\n---'}}]);
//# sourceMappingURL=20296.051decff.js.map